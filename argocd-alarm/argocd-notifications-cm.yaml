apiVersion: v1
data:
  service.slack: |
    token: $slack-bot-token
  template.app-sync-deployed: |
    message: |
      {{if eq .serviceType "slack"}}:rocket:{{end}} Application {{.app.metadata.name}} has been deployed successfully
    slack:
      attachments: |
        [{
          "color": "good",
          "fields": [
            {"title": "Application", "value": "{{.app.metadata.name}}", "short": true},
            {"title": "Status", "value": "Deployed", "short": true},
            {"title": "Revision", "value": "{{.app.status.sync.revision}}", "short": true}
          ]
        }]
  template.app-sync-failed: |
    message: |
      {{if eq .serviceType "slack"}}:x:{{end}} Deploy failed for {{.app.metadata.name}}
    slack:
      attachments: |
        [{
          "color": "danger",
          "fields": [
            {"title": "Application", "value": "{{.app.metadata.name}}", "short": true},
            {"title": "Status", "value": "Deploy Failed", "short": true},
            {"title": "Error Message", "value": "{{.app.status.operationState.message}}", "short": false}
          ]
        }]
  template.app-sync-started: |
    message: |
      {{if eq .serviceType "slack"}}:warning:{{end}} Deploy started for {{.app.metadata.name}} by {{.app.spec.source.repoURL}}
    slack:
      attachments: |
        [{
          "color": "warning",
          "fields": [
            {"title": "Application", "value": "{{.app.metadata.name}}", "short": true},
            {"title": "Status", "value": "Deploy Started", "short": true}
          ]
        }]
  template.app-sync-succeeded: |
    message: |
      {{if eq .serviceType "slack"}}:white_check_mark:{{end}} Deploy succeeded for {{.app.metadata.name}}
    slack:
      attachments: |
        [{
          "color": "good",
          "fields": [
            {"title": "Application", "value": "{{.app.metadata.name}}", "short": true},
            {"title": "Status", "value": "Deploy Success", "short": true},
            {"title": "Sync Status", "value": "{{.app.status.sync.status}}", "short": true},
            {"title": "Health Status", "value": "{{.app.status.health.status}}", "short": true}
          ]
        }]
  trigger.on-deployed: |
    - description: Application is synced and healthy
      send:
        - app-deployed
      when: app.status.sync.status == 'Synced' and app.status.health.status == 'Healthy'
  trigger.on-health-changed-to-healthy: |
    - description: Health status changed to Healthy, application is deployed successfully
      send:
        - app-deployed
      when: app.status.health.status == 'Healthy' and app.status.health.previousStatus == 'Progressing'
  trigger.on-sync-failed: |
    - description: Application syncing has failed
      send:
        - app-sync-failed
      when: app.status.operationState.phase in ['Error', 'Failed']
  trigger.on-sync-started: |
    - description: Application sync has started
      send:
        - app-sync-started
      when: app.status.operationState.phase in ['Running']
  trigger.on-sync-succeeded: |
    - description: Application syncing has succeeded
      send:
        - app-sync-succeeded
      when: app.status.operationState.phase == 'Succeeded'
kind: ConfigMap

