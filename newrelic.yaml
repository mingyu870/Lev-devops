---
# Source: nri-bundle/charts/k8s-agents-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-bundle-k8s-agents-operator
  namespace: newrelic
  labels:
    control-plane: controller-manager
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: nri-bundle
      app.kubernetes.io/name: k8s-agents-operator
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: k8s-agents-operator
    spec:
      serviceAccountName: nri-bundle-k8s-agents-operator
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      terminationGracePeriodSeconds: 10
      containers:
      - name: manager
        args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        - --zap-log-level=info
        - --zap-time-encoding=rfc3339nano
        env:
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        - name: ENABLE_WEBHOOKS
          value: "true"
        image: newrelic/k8s-agents-operator:0.19.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - name: kube-rbac-proxy
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: gcr.io/kubebuilder/kube-rbac-proxy@sha256:771a9a173e033a3ad8b46f5c00a7036eaa88c8d8d1fbd89217325168998113ea
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: nri-bundle-k8s-agents-operator-controller-manager-service-cert
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/instrumentation-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: instrumentations.newrelic.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
spec:
  group: newrelic.com
  names:
    kind: Instrumentation
    listKind: InstrumentationList
    plural: instrumentations
    shortNames:
    - nragent
    - nragents
    singular: instrumentation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Instrumentation is the Schema for the instrumentations API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InstrumentationSpec defines the desired state of Instrumentation
            properties:
              agent:
                description: Agent defines configuration for agent instrumentation.
                properties:
                  env:
                    description: |-
                      Env defines Go specific env vars. There are four layers for env vars' definitions and
                      the precedence order is: `original container env vars` > `language specific env vars` > `common env vars` > `instrument spec configs' vars`.
                      If the former var had been defined, then the other vars would be ignored.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath is
                                    written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the specified
                                    API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the exposed
                                    resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    description: Image is a container image with Go SDK and auto-instrumentation.
                    type: string
                  language:
                    description: Language is the language that will be instrumented.
                    type: string
                  resourceRequirements:
                    description: Resources describes the compute resource requirements.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.
  
  
                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.
  
  
                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  volumeLimitSize:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      VolumeSizeLimit defines size limit for volume used for auto-instrumentation.
                      The default size is 200Mi.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              exporter:
                description: Exporter defines exporter configuration.
                properties:
                  endpoint:
                    description: Endpoint is address of the collector with OTLP endpoint.
                    type: string
                type: object
              licenseKeySecret:
                description: |-
                  LicenseKeySecret defines where to take the licenseKeySecret.
                  it should be present in the operator namespace.
                type: string
              namespaceLabelSelector:
                description: PodLabelSelector defines to which pods the config should
                  be applied.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              podLabelSelector:
                description: PodLabelSelector defines to which pods the config should
                  be applied.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              propagators:
                description: |-
                  Propagators defines inter-process context propagation configuration.
                  Values in this list will be set in the OTEL_PROPAGATORS env var.
                  Enum=tracecontext;none
                items:
                  description: Propagator represents the propagation type.
                  enum:
                  - tracecontext
                  - none
                  type: string
                type: array
              resource:
                description: Resource defines the configuration for the resource attributes,
                  as defined by the OpenTelemetry specification.
                properties:
                  addK8sUIDAttributes:
                    description: AddK8sUIDAttributes defines whether K8s UID attributes
                      should be collected (e.g. k8s.deployment.uid).
                    type: boolean
                  resourceAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      Attributes defines attributes that are added to the resource.
                      For example environment: dev
                    type: object
                type: object
              sampler:
                description: Sampler defines sampling configuration.
                properties:
                  argument:
                    description: |-
                      Argument defines sampler argument.
                      The value depends on the sampler type.
                      For instance for parentbased_traceidratio sampler type it is a number in range [0..1] e.g. 0.25.
                      The value will be set in the OTEL_TRACES_SAMPLER_ARG env var.
                    type: string
                  type:
                    description: |-
                      Type defines sampler type.
                      The value will be set in the OTEL_TRACES_SAMPLER env var.
                      The value can be for instance parentbased_always_on, parentbased_always_off, parentbased_traceidratio...
                    enum:
                    - always_on
                    - always_off
                    - traceidratio
                    - parentbased_always_on
                    - parentbased_always_off
                    - parentbased_traceidratio
                    type: string
                type: object
            type: object
          status:
            description: InstrumentationStatus defines the observed state of Instrumentation
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nri-bundle-k8s-agents-operator-leader-election-role
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nri-bundle-k8s-agents-operator-leader-election-rolebinding
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nri-bundle-k8s-agents-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: nri-bundle-k8s-agents-operator
  namespace: newrelic
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nri-bundle-k8s-agents-operator-manager-role
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups: [ "" ]
  resources: ["secrets"]
  verbs:
    - get
    - list
    - create
    - delete
    - deletecollection
    - patch
    - update
    - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - newrelic.com
  resources:
  - instrumentations
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  - routes/custom-host
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nri-bundle-k8s-agents-operator-manager-rolebinding
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-k8s-agents-operator-manager-role
subjects:
- kind: ServiceAccount
  name: nri-bundle-k8s-agents-operator
  namespace: newrelic
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/metrics-reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nri-bundle-k8s-agents-operator-metrics-reader
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nri-bundle-k8s-agents-operator
  namespace: newrelic
  labels:
    control-plane: controller-manager
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    control-plane: controller-manager
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nri-bundle-k8s-agents-operator-proxy-role
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nri-bundle-k8s-agents-operator-proxy-rolebinding
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-k8s-agents-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: nri-bundle-k8s-agents-operator
  namespace: newrelic
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: newrelic-key-secret
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
data:
  new_relic_license_key: ZjA2ZTc1OWYzNGQwMDhiMTc3NGIyNDJiMTA3OGJjNDFGRkZGTlJBTA==
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nri-bundle-k8s-agents-operator
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
  annotations:
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/webhook-configuration.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: nri-bundle-k8s-agents-operator-controller-manager-service-cert
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
    app.kubernetes.io/component: webhook
  namespace: newrelic
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQxVENDQXIyZ0F3SUJBZ0lRUWh0VGF2aHZYdU9hSjF3bkJiN1ZIakFOQmdrcWhraUc5dzBCQVFzRkFEQXEKTVNnd0pnWURWUVFERXg5ck9ITXRZV2RsYm5SekxXOXdaWEpoZEc5eUxXOXdaWEpoZEc5eUxXTmhNQjRYRFRJMApNVEl4TWpBMk5UUXdNbG9YRFRJMU1USXhNakEyTlRRd01sb3dLVEVuTUNVR0ExVUVBeE1lYm5KcExXSjFibVJzClpTMXJPSE10WVdkbGJuUnpMVzl3WlhKaGRHOXlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUFzRlRvVnBJcmFUTUxGWlg1L2JPVG9UamVTME56b2wrTS8wSUZFVGd2cHJOL3FNN2hCSDA0MmowTAptbjRuYXVuM0k1dC9ZYXhub0dzSzhmbHVSSCtEaUtwOXFNU2xQMXVvTVZUV2sxbnRhUWVrT1NTLzdnUWl6dXppCmE0TlNrR3E0cHdtNkt0RHlUM29FWjdFMGlNaFozeUpFV3NYK1JkZit6NjBYWVl1MTZQTGpUYldaUUNxYU51MEoKNlU2bGFDZUc4NjVKMUMyZUZTNU5HUFJ4YlhUcW9sT0p4eks2WVc1VEVkOHJyd0owUTNxV3hTdDl4Rmx6ZlN6SwpST2k3ZmdHL1pRZzBnem1WS0ZmOWJYSVlWR0VpT2hZOFpTVi9tU0MyN1hhNlVadHFaeTRkbW1NblNSUVhMZzlPClpDbGUrV01UaHQ2SXVUUjlFUW5CNVowWUhOVTRMUUlEQVFBQm80SDNNSUgwTUE0R0ExVWREd0VCL3dRRUF3SUYKb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZgpCZ05WSFNNRUdEQVdnQlR3Rk81VzdEaVBwekdRTGtBTWRtT2hXbkNBRURDQmt3WURWUjBSQklHTE1JR0lnanR1CmNta3RZblZ1Wkd4bExXczRjeTFoWjJWdWRITXRiM0JsY21GMGIzSXRkMlZpYUc5dmF5MXpaWEoyYVdObExtNWwKZDNKbGJHbGpMbk4yWTRKSmJuSnBMV0oxYm1Sc1pTMXJPSE10WVdkbGJuUnpMVzl3WlhKaGRHOXlMWGRsWW1odgpiMnN0YzJWeWRtbGpaUzV1WlhkeVpXeHBZeTV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiREFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQUp2NUppQVVpVUVvZ1FqTElhZkQ5WkFGd2F2RytHWjVUelRRVFZXemRpa2xJYlJwRlJ6QVIKU1plN3kxZys2Um9HTzZPdEdsMGx1N05sQlNmb3hPczZJTEZlSnRocmE3ODZmbFRKUnZVdWNoZGx1LzRLaGx3bAo3aGoxNDVMemVxbXdkeUNvSEF3R1RaSHVNNFdoVWtiZWZQNXdkdThhVnU0cXlEYzRFeThsL1dUOFVXNVFCWFg3Cm05amt6VDBaRU5mbDNoaldUTlc5dXM1WmorWlFkQU1UNmxiNG5RNHYvMzh3VUpqWkJRb2hPQ2o0TjNMenhYY2wKZWI3SkE4MGxiZm93aVU2RmZEOGUrRUowVHljcDFCQk5RSGxJZWFBWW9ITzFTNWY5U3FGcTYxL0w2SEFka09laApvcGlXK0FOd25SbEF3Qnd5bEVjbndTRzIrYnhPVGtMT2xBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc0ZUb1ZwSXJhVE1MRlpYNS9iT1RvVGplUzBOem9sK00vMElGRVRndnByTi9xTTdoCkJIMDQyajBMbW40bmF1bjNJNXQvWWF4bm9Hc0s4Zmx1UkgrRGlLcDlxTVNsUDF1b01WVFdrMW50YVFla09TUy8KN2dRaXp1emlhNE5Ta0dxNHB3bTZLdER5VDNvRVo3RTBpTWhaM3lKRVdzWCtSZGYrejYwWFlZdTE2UExqVGJXWgpRQ3FhTnUwSjZVNmxhQ2VHODY1SjFDMmVGUzVOR1BSeGJYVHFvbE9KeHpLNllXNVRFZDhycndKMFEzcVd4U3Q5CnhGbHpmU3pLUk9pN2ZnRy9aUWcwZ3ptVktGZjliWElZVkdFaU9oWThaU1YvbVNDMjdYYTZVWnRxWnk0ZG1tTW4KU1JRWExnOU9aQ2xlK1dNVGh0Nkl1VFI5RVFuQjVaMFlITlU0TFFJREFRQUJBb0lCQUNUS2NuZXRvOVVkUzFERApyQmRkSW81ZStUS203amVRekRCdUsvUjl6cU52akZGQ2FQeXd5KzN0RXNDM1ZhNGZCdXV0QkJUekRlUVFzWVh2ClR5eUhsb0FyWW5DV0p3eGpLV0t4bXR1L3hhTkdidU5sWVk1ZDJvMW1LNC9YSktEeFEzbkdzOHMvTVcrWHU5ZU8KeDdGS2JFWDhObHJpT0wyRjVhcWJLT2UzYU1zam1NRS9yNjFUQm9oWERkcDJtcXhjRFdCcU8yU1hDUmN1SjFVNAo0enoxdXpIcHJ5SG85WVJzWVo0c3M5NGlDNDc5dnhsZU0xaEFHU0wxRDdNS0RnY05IeldiNnFudE9UQTZxR2lLCndncVR6aGVlREVKVFFtQWxoSWhIYW9zdlE4eUJyamNKcVhBakRneG5uNTNnWU9EL0RHVjdtWk02ZDBQbEFNS1QKcXc4SGEwRUNnWUVBK0RxRlp5Z3VsTnR2UmJxWTk2dDVyaDZ5VVBETlRnQ05qdEZ5TDUxVmh1UWlYOUJ2Rk42NQp6VEd5eFZzeWxxSEZxZTU1L05wb2VNa252RnpqdmFleDZWcVRuQXBVTmg1ZnVaakRTa3ZKaGprNkdwNWV2ZnIxCmE4bTJwRm9IdER5a0E4WFVreFB3LzhUemFqalpZL0lFOWJ6em83UzRSaEpyUlh3OTJKUHJUOFVDZ1lFQXRkb24KWVJEdWxOb2g0SFlSYmxQUy91Y3daWDd4K1N1cmNVVWxVR3N4MktYTXk5YkpNdWg2WDJrMXduOUpDY0lJaU02QgpvejJzem5aL0pRdGUzM3pEYXpPTUVVUndvN2hpTjdiUmxDaWI4TFlDRUhoOXpia2hXN3NZNHM3cXlVM1NJTnN2CnpRemdVNWVWRHJiVGl0S21HQU0wdG9qcjVpWFJOWjA1R2Fxa0pVa0NnWUI2Q21PZUpRNUoxMXpzdm1JSW1vRFgKajNZQi8zSWc0SHE0ZGRjYSs5S1o0RDNhTjZMMWNzK014OXRwMW4yWHUyOXdMYlJDRWF0OWZ3Q1BSbWdkelgzVwpDZGM2eDRWQm1rdGI5M1JFYWVCcG9tY2p3U3M1WWxJWkxYSWplYlFCOURKN1BGOVg5Rnp2a3doTitDZEJVVE1KCkVsNEM1WTRYdldTS0pCeFFCK0dRTlFLQmdHSTRPczYxZTNjUVBmM2pKMVVFbDFDd0E3YStFdWwyeWJsN0ZFVlUKTUc4SVZnMitxNXNBYjUvNnpsdUhyaVpFRTZINGo1SmdyR1l6SUVjYzFoZzFaY01QNjFZa05nWm5mejBDVkQ0RwpsUHMxQXZac2JkNWdZSUVRRThmazVIRG54RmVVcTBPLzhhV1VtS0NDNU16MUsxcUsyTHpDUlU5Z0c1Z3VtL21kCjdkeHBBb0dBRGdlcFZHZFB3Mzg3QjVWL0k4ak1GQVlUSDh0LzErMFhDOU4zVTl5bnVKSFBQZ1U5cFBLOVpJVWoKWCtERlJPa21SYWFPQ2xScWZpQ3grRHFjSk5DaHFiS2luczlDTktXTm1BMk8vSmEwNXEzejlFOTFFdEd3N1p0RgpWQk10WWkrQ04rZDhJR2JzV2hSRVB5Z0pyamM1QkdNcndZTW5tZlltQnk5cTdHc21XRzg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQUpDQ2UwakpvUURMajFNb09tVzV0ejh3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmF6aHpMV0ZuWlc1MGN5MXZjR1Z5WVhSdmNpMXZjR1Z5WVhSdmNpMWpZVEFlRncweQpOREV5TVRJd05qVTBNREphRncweU5URXlNVEl3TmpVME1ESmFNQ294S0RBbUJnTlZCQU1USDJzNGN5MWhaMlZ1CmRITXRiM0JsY21GMGIzSXRiM0JsY21GMGIzSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUN1QVArTFZVRjk2V1V0cGd4VEswclZsYTdhRUhRNjVtVU5YekR1Mm1sNlhSd2ZqRmVSUFp5dwpvcHNGejBBNFBJcGFlU0FxRk40MVFFNFArSVFKTHpsZk1XNG1sNWs5N1RraUx4djcxamRLcHdmUDdPUmJna0tKCkV2azV6dmE5ZDZBNVY2aU5mdmcwVm5xaXRsV1lhUmUyR3FXUTM1NmM4eU1xU0prVUw3Qm5EYy9CZTN6T1ZKbzUKbjJOakpQWng4bDd2WFZmbmNMSkRXWS9qK0czaTVrOFNEcUw2WE83T3FOSENXV2phVGg1YThzcVJJK05uVTJkcgpQdWtrNVRUUk9XZytOL0FyTFRPeXRpVkVndmg0Vnhicng4L3crbGJIWDdyVWdBYUJjelpZQW5ITlE4T1pkTDZvCmM3b25zRjRkU3R1TFdsMkZNMTdzZCt2M3ZOdG1MNkh4QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVOEJUdVZ1dzRqNmN4a0M1QURIWmpvVnB3Z0JBd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQ2c2eWlaOUVsOGF6amlzdzZsN2pXL1V1QkdKb2tJdHZWZUNPb1JITC9MZ2MrMGJGbFJ6dW5uTzZmSysKeTllUlVXYXNYaXNyT0tORmNYVmhuYmpjMGErOTFtZThZL3ZtQkoyRUlQWnkxb0VTUUJWVW42cko4Sm5Kd01BMApBY0VNT3FLcWJ4SncvaVgwTlVsQU9YcUtkaEdBN0JNb1dZVUpWZVVhaHg2SUliNjVkYWx4ejJtbGFJSWhiK3h5CnZ2SGFUOE9QVk00NVd3blIwQkx4OGlBRlNZaXdDS0x6Z1A3VnQ1UlplSCtQZ1dMamkyMG5TMk1taHRZQTNRRUQKa1JpLzI0THNKWHR6U21FTklGZE5HNWp3RmpJT3RyZmNicW9nWS9PYVd6aGlmUTluN3lodXYvY1lGQlpFUmJQbQphSDh4YlVQZHBUV0c0bW1iMDREaGd2elF4R1U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: nri-bundle-k8s-agents-operator-mutation
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQUpDQ2UwakpvUURMajFNb09tVzV0ejh3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmF6aHpMV0ZuWlc1MGN5MXZjR1Z5WVhSdmNpMXZjR1Z5WVhSdmNpMWpZVEFlRncweQpOREV5TVRJd05qVTBNREphRncweU5URXlNVEl3TmpVME1ESmFNQ294S0RBbUJnTlZCQU1USDJzNGN5MWhaMlZ1CmRITXRiM0JsY21GMGIzSXRiM0JsY21GMGIzSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUN1QVArTFZVRjk2V1V0cGd4VEswclZsYTdhRUhRNjVtVU5YekR1Mm1sNlhSd2ZqRmVSUFp5dwpvcHNGejBBNFBJcGFlU0FxRk40MVFFNFArSVFKTHpsZk1XNG1sNWs5N1RraUx4djcxamRLcHdmUDdPUmJna0tKCkV2azV6dmE5ZDZBNVY2aU5mdmcwVm5xaXRsV1lhUmUyR3FXUTM1NmM4eU1xU0prVUw3Qm5EYy9CZTN6T1ZKbzUKbjJOakpQWng4bDd2WFZmbmNMSkRXWS9qK0czaTVrOFNEcUw2WE83T3FOSENXV2phVGg1YThzcVJJK05uVTJkcgpQdWtrNVRUUk9XZytOL0FyTFRPeXRpVkVndmg0Vnhicng4L3crbGJIWDdyVWdBYUJjelpZQW5ITlE4T1pkTDZvCmM3b25zRjRkU3R1TFdsMkZNMTdzZCt2M3ZOdG1MNkh4QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVOEJUdVZ1dzRqNmN4a0M1QURIWmpvVnB3Z0JBd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQ2c2eWlaOUVsOGF6amlzdzZsN2pXL1V1QkdKb2tJdHZWZUNPb1JITC9MZ2MrMGJGbFJ6dW5uTzZmSysKeTllUlVXYXNYaXNyT0tORmNYVmhuYmpjMGErOTFtZThZL3ZtQkoyRUlQWnkxb0VTUUJWVW42cko4Sm5Kd01BMApBY0VNT3FLcWJ4SncvaVgwTlVsQU9YcUtkaEdBN0JNb1dZVUpWZVVhaHg2SUliNjVkYWx4ejJtbGFJSWhiK3h5CnZ2SGFUOE9QVk00NVd3blIwQkx4OGlBRlNZaXdDS0x6Z1A3VnQ1UlplSCtQZ1dMamkyMG5TMk1taHRZQTNRRUQKa1JpLzI0THNKWHR6U21FTklGZE5HNWp3RmpJT3RyZmNicW9nWS9PYVd6aGlmUTluN3lodXYvY1lGQlpFUmJQbQphSDh4YlVQZHBUV0c0bW1iMDREaGd2elF4R1U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    service:
      name: nri-bundle-k8s-agents-operator-webhook-service
      namespace: newrelic
      path: /mutate-newrelic-com-v1alpha2-instrumentation
  failurePolicy: Fail
  name: minstrumentation.kb.io
  rules:
  - apiGroups:
    - newrelic.com
    apiVersions:
    - v1alpha2
    operations:
    - CREATE
    - UPDATE
    resources:
    - instrumentations
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQUpDQ2UwakpvUURMajFNb09tVzV0ejh3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmF6aHpMV0ZuWlc1MGN5MXZjR1Z5WVhSdmNpMXZjR1Z5WVhSdmNpMWpZVEFlRncweQpOREV5TVRJd05qVTBNREphRncweU5URXlNVEl3TmpVME1ESmFNQ294S0RBbUJnTlZCQU1USDJzNGN5MWhaMlZ1CmRITXRiM0JsY21GMGIzSXRiM0JsY21GMGIzSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUN1QVArTFZVRjk2V1V0cGd4VEswclZsYTdhRUhRNjVtVU5YekR1Mm1sNlhSd2ZqRmVSUFp5dwpvcHNGejBBNFBJcGFlU0FxRk40MVFFNFArSVFKTHpsZk1XNG1sNWs5N1RraUx4djcxamRLcHdmUDdPUmJna0tKCkV2azV6dmE5ZDZBNVY2aU5mdmcwVm5xaXRsV1lhUmUyR3FXUTM1NmM4eU1xU0prVUw3Qm5EYy9CZTN6T1ZKbzUKbjJOakpQWng4bDd2WFZmbmNMSkRXWS9qK0czaTVrOFNEcUw2WE83T3FOSENXV2phVGg1YThzcVJJK05uVTJkcgpQdWtrNVRUUk9XZytOL0FyTFRPeXRpVkVndmg0Vnhicng4L3crbGJIWDdyVWdBYUJjelpZQW5ITlE4T1pkTDZvCmM3b25zRjRkU3R1TFdsMkZNMTdzZCt2M3ZOdG1MNkh4QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVOEJUdVZ1dzRqNmN4a0M1QURIWmpvVnB3Z0JBd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQ2c2eWlaOUVsOGF6amlzdzZsN2pXL1V1QkdKb2tJdHZWZUNPb1JITC9MZ2MrMGJGbFJ6dW5uTzZmSysKeTllUlVXYXNYaXNyT0tORmNYVmhuYmpjMGErOTFtZThZL3ZtQkoyRUlQWnkxb0VTUUJWVW42cko4Sm5Kd01BMApBY0VNT3FLcWJ4SncvaVgwTlVsQU9YcUtkaEdBN0JNb1dZVUpWZVVhaHg2SUliNjVkYWx4ejJtbGFJSWhiK3h5CnZ2SGFUOE9QVk00NVd3blIwQkx4OGlBRlNZaXdDS0x6Z1A3VnQ1UlplSCtQZ1dMamkyMG5TMk1taHRZQTNRRUQKa1JpLzI0THNKWHR6U21FTklGZE5HNWp3RmpJT3RyZmNicW9nWS9PYVd6aGlmUTluN3lodXYvY1lGQlpFUmJQbQphSDh4YlVQZHBUV0c0bW1iMDREaGd2elF4R1U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    service:
      name: nri-bundle-k8s-agents-operator-webhook-service
      namespace: newrelic
      path: /mutate-v1-pod
  failurePolicy: Ignore
  name: mpod.kb.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
  sideEffects: None
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: nri-bundle-k8s-agents-operator-validation
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
webhooks:
- admissionReviewVersions:
    - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQUpDQ2UwakpvUURMajFNb09tVzV0ejh3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmF6aHpMV0ZuWlc1MGN5MXZjR1Z5WVhSdmNpMXZjR1Z5WVhSdmNpMWpZVEFlRncweQpOREV5TVRJd05qVTBNREphRncweU5URXlNVEl3TmpVME1ESmFNQ294S0RBbUJnTlZCQU1USDJzNGN5MWhaMlZ1CmRITXRiM0JsY21GMGIzSXRiM0JsY21GMGIzSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUN1QVArTFZVRjk2V1V0cGd4VEswclZsYTdhRUhRNjVtVU5YekR1Mm1sNlhSd2ZqRmVSUFp5dwpvcHNGejBBNFBJcGFlU0FxRk40MVFFNFArSVFKTHpsZk1XNG1sNWs5N1RraUx4djcxamRLcHdmUDdPUmJna0tKCkV2azV6dmE5ZDZBNVY2aU5mdmcwVm5xaXRsV1lhUmUyR3FXUTM1NmM4eU1xU0prVUw3Qm5EYy9CZTN6T1ZKbzUKbjJOakpQWng4bDd2WFZmbmNMSkRXWS9qK0czaTVrOFNEcUw2WE83T3FOSENXV2phVGg1YThzcVJJK05uVTJkcgpQdWtrNVRUUk9XZytOL0FyTFRPeXRpVkVndmg0Vnhicng4L3crbGJIWDdyVWdBYUJjelpZQW5ITlE4T1pkTDZvCmM3b25zRjRkU3R1TFdsMkZNMTdzZCt2M3ZOdG1MNkh4QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVOEJUdVZ1dzRqNmN4a0M1QURIWmpvVnB3Z0JBd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQ2c2eWlaOUVsOGF6amlzdzZsN2pXL1V1QkdKb2tJdHZWZUNPb1JITC9MZ2MrMGJGbFJ6dW5uTzZmSysKeTllUlVXYXNYaXNyT0tORmNYVmhuYmpjMGErOTFtZThZL3ZtQkoyRUlQWnkxb0VTUUJWVW42cko4Sm5Kd01BMApBY0VNT3FLcWJ4SncvaVgwTlVsQU9YcUtkaEdBN0JNb1dZVUpWZVVhaHg2SUliNjVkYWx4ejJtbGFJSWhiK3h5CnZ2SGFUOE9QVk00NVd3blIwQkx4OGlBRlNZaXdDS0x6Z1A3VnQ1UlplSCtQZ1dMamkyMG5TMk1taHRZQTNRRUQKa1JpLzI0THNKWHR6U21FTklGZE5HNWp3RmpJT3RyZmNicW9nWS9PYVd6aGlmUTluN3lodXYvY1lGQlpFUmJQbQphSDh4YlVQZHBUV0c0bW1iMDREaGd2elF4R1U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    service:
      name: nri-bundle-k8s-agents-operator-webhook-service
      namespace: newrelic
      path: /validate-newrelic-com-v1alpha2-instrumentation
  failurePolicy: Fail
  name: vinstrumentationcreateupdate.kb.io
  rules:
    - apiGroups:
        - newrelic.com
      apiVersions:
        - v1alpha2
      operations:
        - CREATE
        - UPDATE
      resources:
        - instrumentations
  sideEffects: None
- admissionReviewVersions:
    - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQUpDQ2UwakpvUURMajFNb09tVzV0ejh3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmF6aHpMV0ZuWlc1MGN5MXZjR1Z5WVhSdmNpMXZjR1Z5WVhSdmNpMWpZVEFlRncweQpOREV5TVRJd05qVTBNREphRncweU5URXlNVEl3TmpVME1ESmFNQ294S0RBbUJnTlZCQU1USDJzNGN5MWhaMlZ1CmRITXRiM0JsY21GMGIzSXRiM0JsY21GMGIzSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUN1QVArTFZVRjk2V1V0cGd4VEswclZsYTdhRUhRNjVtVU5YekR1Mm1sNlhSd2ZqRmVSUFp5dwpvcHNGejBBNFBJcGFlU0FxRk40MVFFNFArSVFKTHpsZk1XNG1sNWs5N1RraUx4djcxamRLcHdmUDdPUmJna0tKCkV2azV6dmE5ZDZBNVY2aU5mdmcwVm5xaXRsV1lhUmUyR3FXUTM1NmM4eU1xU0prVUw3Qm5EYy9CZTN6T1ZKbzUKbjJOakpQWng4bDd2WFZmbmNMSkRXWS9qK0czaTVrOFNEcUw2WE83T3FOSENXV2phVGg1YThzcVJJK05uVTJkcgpQdWtrNVRUUk9XZytOL0FyTFRPeXRpVkVndmg0Vnhicng4L3crbGJIWDdyVWdBYUJjelpZQW5ITlE4T1pkTDZvCmM3b25zRjRkU3R1TFdsMkZNMTdzZCt2M3ZOdG1MNkh4QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVOEJUdVZ1dzRqNmN4a0M1QURIWmpvVnB3Z0JBd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQ2c2eWlaOUVsOGF6amlzdzZsN2pXL1V1QkdKb2tJdHZWZUNPb1JITC9MZ2MrMGJGbFJ6dW5uTzZmSysKeTllUlVXYXNYaXNyT0tORmNYVmhuYmpjMGErOTFtZThZL3ZtQkoyRUlQWnkxb0VTUUJWVW42cko4Sm5Kd01BMApBY0VNT3FLcWJ4SncvaVgwTlVsQU9YcUtkaEdBN0JNb1dZVUpWZVVhaHg2SUliNjVkYWx4ejJtbGFJSWhiK3h5CnZ2SGFUOE9QVk00NVd3blIwQkx4OGlBRlNZaXdDS0x6Z1A3VnQ1UlplSCtQZ1dMamkyMG5TMk1taHRZQTNRRUQKa1JpLzI0THNKWHR6U21FTklGZE5HNWp3RmpJT3RyZmNicW9nWS9PYVd6aGlmUTluN3lodXYvY1lGQlpFUmJQbQphSDh4YlVQZHBUV0c0bW1iMDREaGd2elF4R1U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    service:
      name: nri-bundle-k8s-agents-operator-webhook-service
      namespace: newrelic
      path: /validate-newrelic-com-v1alpha2-instrumentation
  failurePolicy: Ignore
  name: vinstrumentationdelete.kb.io
  rules:
    - apiGroups:
        - newrelic.com
      apiVersions:
        - v1alpha2
      operations:
        - DELETE
      resources:
        - instrumentations
  sideEffects: None
---
# Source: nri-bundle/charts/k8s-agents-operator/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nri-bundle-k8s-agents-operator-webhook-service
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    app.kubernetes.io/version: 0.19.0
    helm.sh/chart: k8s-agents-operator-0.19.0
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: k8s-agents-operator
    control-plane: controller-manager
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: nri-bundle/charts/kube-state-metrics/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.26.0
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "2.13.0"
  name: nri-bundle-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-kube-state-metrics
subjects:
- kind: ServiceAccount
  name: nri-bundle-kube-state-metrics
  namespace: newrelic
---
# Source: nri-bundle/charts/kube-state-metrics/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-bundle-kube-state-metrics
  namespace: newrelic
  labels:    
    helm.sh/chart: kube-state-metrics-5.26.0
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "2.13.0"
spec:
  selector:
    matchLabels:      
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: nri-bundle
  replicas: 1
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:        
        helm.sh/chart: kube-state-metrics-5.26.0
        app.kubernetes.io/component: metrics
        app.kubernetes.io/part-of: kube-state-metrics
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/version: "2.13.0"
    spec:
      automountServiceAccountToken: true
      hostNetwork: false
      serviceAccountName: nri-bundle-kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: kube-state-metrics
        args:
        - --port=8080
        - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
        imagePullPolicy: IfNotPresent
        image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.13.0
        ports:
        - containerPort: 8080
          name: "http"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            path: /livez
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            path: /readyz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
---
# Source: nri-bundle/charts/kube-state-metrics/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.26.0
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "2.13.0"
  name: nri-bundle-kube-state-metrics
rules:

- apiGroups: ["certificates.k8s.io"]
  resources:
  - certificatesigningrequests
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - cronjobs
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - daemonsets
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - deployments
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - endpoints
  verbs: ["list", "watch"]

- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["list", "watch"]

- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - limitranges
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - mutatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["list", "watch"]

- apiGroups: ["networking.k8s.io"]
  resources:
  - networkpolicies
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumeclaims
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumes
  verbs: ["list", "watch"]

- apiGroups: ["policy"]
  resources:
    - poddisruptionbudgets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - pods
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - replicasets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - replicationcontrollers
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - resourcequotas
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - secrets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - services
  verbs: ["list", "watch"]

- apiGroups: ["apps"]
  resources:
  - statefulsets
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - storageclasses
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - validatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - volumeattachments
  verbs: ["list", "watch"]
---
# Source: nri-bundle/charts/kube-state-metrics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nri-bundle-kube-state-metrics
  namespace: newrelic
  labels:    
    helm.sh/chart: kube-state-metrics-5.26.0
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "2.13.0"
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: "ClusterIP"
  ports:
  - name: "http"
    protocol: TCP
    port: 8080
    targetPort: 8080
  
  selector:    
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: nri-bundle
---
# Source: nri-bundle/charts/kube-state-metrics/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.26.0
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "2.13.0"
  name: nri-bundle-kube-state-metrics
  namespace: newrelic
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-newrelic-infrastructure
rules:
  - apiGroups: [""]
    resources:
      - "nodes/metrics"
      - "nodes/stats"
      - "nodes/proxy"
    verbs: ["get", "list"]
  - apiGroups: [ "" ]
    resources:
      - "endpoints"
      - "services"
      - "nodes"
      - "namespaces"
      - "pods"
    verbs: [ "get", "list", "watch" ]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-newrelic-infrastructure
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-newrelic-infrastructure
subjects:
- kind: ServiceAccount
  name: nri-bundle-newrelic-infrastructure
  namespace: newrelic
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/agent-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-nrk8s-agent-controlplane
data:
  newrelic-infra.yml: |-
    # This is the configuration file for the infrastructure agent. See:
    # https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/configuration/infrastructure-agent-configuration-settings/
    custom_attributes:
      clusterName: sl-space-tke
    http_server_enabled: true
    http_server_port: 8001
    is_forward_only: true
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-nrk8s-controlplane
rules:
  - apiGroups: [""]
    resources:
      - "nodes/metrics"
      - "nodes/stats"
      - "nodes/proxy"
    verbs: ["get", "list"]
  - apiGroups: [ "" ]
    resources:
      - "pods"
      - "nodes"
    verbs: [ "get", "list", "watch" ]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get", "head"]
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-nrk8s-controlplane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-nrk8s-controlplane
subjects:
  - kind: ServiceAccount
    name: nri-bundle-nrk8s-controlplane
    namespace: newrelic
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
    mode: privileged
  name: nri-bundle-nrk8s-controlplane
spec:
  updateStrategy: 
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: nri-bundle
      app.kubernetes.io/name: newrelic-infrastructure
      app.kubernetes.io/component: controlplane
  template:
    metadata:
      annotations:
        checksum/nri-kubernetes: 974d21231fb51e11a85664cb62b7a258482196e4ed4320e5624cbdc8d94d461d
        checksum/agent-config: 26d21710f538a0493e58c49e0ce40609fb6cb350ff1c6bb48d822d5d0d1b1e14
        checksum/license-secret: a03aecf7b8e98bbcfd4a72f7a32867297536c6d7d51f97d23106a9b2f06b7043
      labels:
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: newrelic-infrastructure
        mode: privileged
        app.kubernetes.io/component: controlplane
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: nri-bundle-nrk8s-controlplane
      containers:
        - name: controlplane
          image: "newrelic/nri-kubernetes:3.32.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          env:
            - name: "NRI_KUBERNETES_SINK_HTTP_PORT"
              value: "8001"
            - name: "NRI_KUBERNETES_CLUSTERNAME"
              value: sl-space-tke
            - name: "NRI_KUBERNETES_VERBOSE"
              value: "false"

            - name: "NRI_KUBERNETES_NODENAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRI_KUBERNETES_NODEIP"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "status.hostIP"
          volumeMounts:
            - name: nri-kubernetes-config
              mountPath: /etc/newrelic-infra/nri-kubernetes.yml
              subPath: nri-kubernetes.yml
          resources: 
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
        - name: forwarder
          image: "newrelic/k8s-events-forwarder:1.58.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          ports:
            - containerPort: 8001
          env:
            - name: "NRIA_LICENSE_KEY"
              valueFrom:
                secretKeyRef:
                  name: nri-bundle-newrelic-infrastructure-license
                  key: licenseKey

            - name: "NRIA_DNS_HOSTNAME_RESOLUTION"
              value: "false"

            - name: "K8S_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
          volumeMounts:
            - mountPath: /var/db/newrelic-infra/data
              name: forwarder-tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: forwarder-tmpfs-user-data
            - mountPath: /tmp
              name: forwarder-tmpfs-tmp
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
          resources: 
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
      volumes:
        - name: nri-kubernetes-config
          configMap:
            name: nri-bundle-nrk8s-controlplane
            items:
              - key: nri-kubernetes.yml
                path: nri-kubernetes.yml
        - name: forwarder-tmpfs-data
          emptyDir: {}
        - name: forwarder-tmpfs-user-data
          emptyDir: {}
        - name: forwarder-tmpfs-tmp
          emptyDir: {}
        - name: config
          configMap:
            name: nri-bundle-nrk8s-agent-controlplane
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/controlplane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/etcd
                operator: Exists
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/scraper-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-nrk8s-controlplane
  namespace: newrelic
data:
  nri-kubernetes.yml: |-
    interval: 30s
    namespaceSelector: {}
    controlPlane:
      retries: 3
      timeout: 10s
      enabled: true
      etcd:
        autodiscover:
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:4001
          - url: http://localhost:2381
          matchNode: true
          namespace: kube-system
          selector: tier=control-plane,component=etcd
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:4001
          matchNode: true
          namespace: kube-system
          selector: k8s-app=etcd-manager-main
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:4001
          matchNode: true
          namespace: kube-system
          selector: k8s-app=etcd
        enabled: true
      scheduler:
        autodiscover:
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10259
          matchNode: true
          namespace: kube-system
          selector: tier=control-plane,component=kube-scheduler
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10259
          matchNode: true
          namespace: kube-system
          selector: k8s-app=kube-scheduler
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10259
          matchNode: true
          namespace: openshift-kube-scheduler
          selector: app=openshift-kube-scheduler,scheduler=true
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10259
          matchNode: true
          namespace: kube-system
          selector: app=openshift-kube-scheduler,scheduler=true
        enabled: true
      controllerManager:
        autodiscover:
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10257
          matchNode: true
          namespace: kube-system
          selector: tier=control-plane,component=kube-controller-manager
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10257
          matchNode: true
          namespace: kube-system
          selector: k8s-app=kube-controller-manager
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10257
          matchNode: true
          namespace: openshift-kube-controller-manager
          selector: app=kube-controller-manager,kube-controller-manager=true
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10257
          matchNode: true
          namespace: kube-system
          selector: app=kube-controller-manager,kube-controller-manager=true
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10257
          matchNode: true
          namespace: kube-system
          selector: app=controller-manager,controller-manager=true
        enabled: true
      apiServer:
        autodiscover:
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:8443
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:6443
          - url: http://localhost:8080
          matchNode: true
          namespace: kube-system
          selector: tier=control-plane,component=kube-apiserver
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:8443
          - url: http://localhost:8080
          matchNode: true
          namespace: kube-system
          selector: k8s-app=kube-apiserver
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:8443
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:6443
          matchNode: true
          namespace: openshift-kube-apiserver
          selector: app=openshift-kube-apiserver,apiserver=true
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:8443
          matchNode: true
          namespace: kube-system
          selector: app=openshift-kube-apiserver,apiserver=true
        enabled: true
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-nrk8s-controlplane
  namespace: newrelic
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/ksm/agent-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-nrk8s-agent-ksm
data:
  newrelic-infra.yml: |-
    # This is the configuration file for the infrastructure agent. See:
    # https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/configuration/infrastructure-agent-configuration-settings/
    custom_attributes:
      clusterName: sl-space-tke
    http_server_enabled: true
    http_server_port: 8002
    is_forward_only: true
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/ksm/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
    mode: privileged
  name: nri-bundle-nrk8s-ksm
spec:
  strategy: 
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: nri-bundle
      app.kubernetes.io/name: newrelic-infrastructure
      app.kubernetes.io/component: ksm
  template:
    metadata:
      annotations:
        checksum/nri-kubernetes: 066b41698c723f1a3b59ba27e7fd0a443816e551419f46069a877338fe93a265
        checksum/agent-config: ccae1aaac30ef6534e9e993856d9e8fbc910571cda18033aae1e0970b78ca559
        checksum/license-secret: license-secret
      labels:
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: newrelic-infrastructure
        mode: privileged
        app.kubernetes.io/component: ksm
    spec:
      serviceAccountName: nri-bundle-newrelic-infrastructure
      hostNetwork: false
      containers:
        - name: ksm
          image: "newrelic/nri-kubernetes:3.32.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          env:
            - name: "NRI_KUBERNETES_SINK_HTTP_PORT"
              value: "8002"
            - name: "NRI_KUBERNETES_CLUSTERNAME"
              value: sl-space-tke
            - name: "NRI_KUBERNETES_VERBOSE"
              value: "false"

            - name: "NRI_KUBERNETES_NODENAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
          volumeMounts:
            - name: nri-kubernetes-config
              mountPath: /etc/newrelic-infra/nri-kubernetes.yml
              subPath: nri-kubernetes.yml
          resources: 
            limits:
              memory: 850M
            requests:
              cpu: 100m
              memory: 150M
        - name: forwarder
          image: "newrelic/k8s-events-forwarder:1.58.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          ports:
            - containerPort: 8002
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: nri-bundle-newrelic-infrastructure-license
                  key: licenseKey

            - name: "NRIA_DNS_HOSTNAME_RESOLUTION"
              value: "false"

            - name: "K8S_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
          volumeMounts:
            - mountPath: /var/db/newrelic-infra/data
              name: forwarder-tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: forwarder-tmpfs-user-data
            - mountPath: /tmp
              name: forwarder-tmpfs-tmp
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
          resources: 
            limits:
              memory: 850M
            requests:
              cpu: 100m
              memory: 150M
      volumes:
        - name: nri-kubernetes-config
          configMap:
            name: nri-bundle-nrk8s-ksm
            items:
              - key: nri-kubernetes.yml
                path: nri-kubernetes.yml
        - name: forwarder-tmpfs-data
          emptyDir: {}
        - name: forwarder-tmpfs-user-data
          emptyDir: {}
        - name: forwarder-tmpfs-tmp
          emptyDir: {}
        - name: config
          configMap:
            name: nri-bundle-nrk8s-agent-ksm
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: kube-state-metrics
              topologyKey: kubernetes.io/hostname
            weight: 100
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/ksm/scraper-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-nrk8s-ksm
  namespace: newrelic
data:
  nri-kubernetes.yml: |-
    interval: 30s
    namespaceSelector: {}
    ksm:
      enabled: true
      retries: 3
      scheme: http
      selector: app.kubernetes.io/name=kube-state-metrics
      timeout: 10s
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/kubelet/agent-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-nrk8s-agent-kubelet
data:
  newrelic-infra.yml: |-
    # This is the configuration file for the infrastructure agent. See:
    # https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/configuration/infrastructure-agent-configuration-settings/
    custom_attributes:
      clusterName: sl-space-tke
    features:
      docker_enabled: false
    http_server_enabled: true
    http_server_port: 8003
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/kubelet/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
    mode: privileged
  name: nri-bundle-nrk8s-kubelet
spec:
  updateStrategy: 
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: nri-bundle
      app.kubernetes.io/name: newrelic-infrastructure
      app.kubernetes.io/component: kubelet
  template:
    metadata:
      annotations:
        checksum/nri-kubernetes: 9e7709233565ae02ccc1e808b7e33667b035903ab87e635eb7935dcc8a6a2259
        checksum/agent-config: cc63ee84e938f6f1a698cacfa80dfd3045e1f57f5da82822c9f01b2c0926784f
        checksum/license-secret: a03aecf7b8e98bbcfd4a72f7a32867297536c6d7d51f97d23106a9b2f06b7043
        checksum/integrations_config: 17b56661d8f7987850318a047cfcf2a828234e9fb1d16babc49bfcb8da4eb7b6
      labels:
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: newrelic-infrastructure
        mode: privileged
        app.kubernetes.io/component: kubelet
    spec:
      serviceAccountName: nri-bundle-newrelic-infrastructure
      hostNetwork: false
      containers:
        - name: kubelet
          image: "newrelic/nri-kubernetes:3.32.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          env:
            - name: "NRI_KUBERNETES_SINK_HTTP_PORT"
              value: "8003"
            - name: "NRI_KUBERNETES_CLUSTERNAME"
              value: sl-space-tke
            - name: "NRI_KUBERNETES_VERBOSE"
              value: "false"

            - name: "NRI_KUBERNETES_NODENAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            # Required to connect to the kubelet
            - name: "NRI_KUBERNETES_NODEIP"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "status.hostIP"
          volumeMounts:
            - name: nri-kubernetes-config
              mountPath: /etc/newrelic-infra/nri-kubernetes.yml
              subPath: nri-kubernetes.yml
          resources: 
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
        - name: agent
          image: "newrelic/infrastructure-bundle:3.2.61"
          args: [ "newrelic-infra" ]
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsUser: 0
          ports:
            - containerPort: 8003
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: nri-bundle-newrelic-infrastructure-license
                  key: licenseKey

            - name: "NRIA_OVERRIDE_HOSTNAME_SHORT"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"

            - name: "NRIA_OVERRIDE_HOSTNAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"

            - name: "NRI_KUBERNETES_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "CLUSTER_NAME"
              value: sl-space-tke
            - name: "NRIA_PASSTHROUGH_ENVIRONMENT"
              value: "CLUSTER_NAME"
            - name: "NRIA_HOST"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "status.hostIP"
          volumeMounts:
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
            - name: nri-integrations-cfg-volume
              mountPath: /etc/newrelic-infra/integrations.d/
            - name: dev
              mountPath: /dev
            - name: host-containerd-socket
              mountPath: /run/containerd/containerd.sock
            - name: host-docker-socket
              mountPath: /var/run/docker.sock
            - name: log
              mountPath: /var/log
            - name: host-volume
              mountPath: /host
              mountPropagation: HostToContainer
              readOnly: true
            - mountPath: /var/db/newrelic-infra/data
              name: agent-tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: agent-tmpfs-user-data
            - mountPath: /tmp
              name: agent-tmpfs-tmp
          resources: 
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
      volumes:
        - name: dev
          hostPath:
            path: /dev
        - name: host-containerd-socket
          hostPath:
            path: /run/containerd/containerd.sock
        - name: host-docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: log
          hostPath:
            path: /var/log
        - name: host-volume
          hostPath:
            path: /
        - name: agent-tmpfs-data
          emptyDir: {}
        - name: agent-tmpfs-user-data
          emptyDir: {}
        - name: agent-tmpfs-tmp
          emptyDir: {}
        - name: nri-kubernetes-config
          configMap:
            name: nri-bundle-nrk8s-kubelet
            items:
              - key: nri-kubernetes.yml
                path: nri-kubernetes.yml
        - name: config
          configMap:
            name: nri-bundle-nrk8s-agent-kubelet
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
        - name: nri-integrations-cfg-volume
          configMap:
            name: nri-bundle-nrk8s-integrations-cfg
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/kubelet/integrations-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-nrk8s-integrations-cfg
data:
  # This ConfigMap holds config files for integrations. They should have the following format:
  #redis-config.yml: |
  #  # Run auto discovery to find pods with label "app=redis"
  #  discovery:
  #    command:
  #      # Run discovery for Kubernetes. Use the following optional arguments:
  #      # --namespaces: Comma separated list of namespaces to discover pods on
  #      # --tls: Use secure (TLS) connection
  #      # --port: Port used to connect to the kubelet. Default is 10255
  #      exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port PORT --tls
  #      match:
  #        label.app: redis
  #  integrations:
  #    - name: nri-redis
  #      env:
  #        # using the discovered IP as the hostname address
  #        HOSTNAME: ${discovery.ip}
  #        PORT: 6379
  #        KEYS: '{"0":["<KEY_1>"],"1":["<KEY_2>"]}'
  #        REMOTE_MONITORING: true
  #      labels:
  #        env: production
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/kubelet/scraper-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-nrk8s-kubelet
  namespace: newrelic
data:
  nri-kubernetes.yml: |
    interval: 30s
    namespaceSelector: {}
    kubelet:
      enabled: true
      retries: 3
      scraperMaxReruns: 4
      timeout: 10s
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: nri-bundle-newrelic-infrastructure-license
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
data:
  licenseKey: ZjA2ZTc1OWYzNGQwMDhiMTc3NGIyNDJiMTA3OGJjNDFGRkZGTlJBTA==
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.32.0
    helm.sh/chart: newrelic-infrastructure-3.37.0
  name: nri-bundle-newrelic-infrastructure
  namespace: newrelic
---
# Source: nri-bundle/charts/newrelic-logging/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:     
    app: newrelic-logging
    chart: newrelic-logging-1.23.5
    release: nri-bundle
    app.kubernetes.io/name: newrelic-logging
  name: nri-bundle-newrelic-logging
rules:
  - apiGroups: [""]
    resources:
      - namespaces
      - pods
    verbs: ["get", "list", "watch"]
---
# Source: nri-bundle/charts/newrelic-logging/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:     
    app: newrelic-logging
    chart: newrelic-logging-1.23.5
    release: nri-bundle
    app.kubernetes.io/name: newrelic-logging
  name: nri-bundle-newrelic-logging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-newrelic-logging
subjects:
- kind: ServiceAccount
  name: nri-bundle-newrelic-logging
  namespace: newrelic
---
# Source: nri-bundle/charts/newrelic-logging/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: newrelic
  labels:     
    app: newrelic-logging
    chart: newrelic-logging-1.23.5
    release: nri-bundle
    app.kubernetes.io/name: newrelic-logging
  name: nri-bundle-newrelic-logging-fluent-bit-config
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     ${LOG_LEVEL}
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020
    
    [INPUT]
        Name              tail
        Alias             pod-logs-tailer
        Tag               kube.*
        Path              ${PATH}
        multiline.parser  ${LOG_PARSER}
        DB                ${FB_DB}
        Mem_Buf_Limit     7MB
        Skip_Long_Lines   On
        Refresh_Interval  10
    
    [FILTER]
        Name           kubernetes
        Match          kube.*
        Alias          kubernetes-enricher
        # We need the full DNS suffix as Windows only supports resolving names with this suffix
        # See: https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#dns-limitations
        Kube_URL       https://kubernetes.default.svc.cluster.local:443
        Buffer_Size    ${K8S_BUFFER_SIZE}
        K8S-Logging.Exclude ${K8S_LOGGING_EXCLUDE}
        Labels         Off
        Annotations    Off
    
    [FILTER]
        Name           nest
        Match          *
        Alias          kubernetes-attribute-lifter
        Operation      lift
        Nested_under   kubernetes
    
    [FILTER]
        Name           record_modifier
        Match          *
        Alias          node-attributes-enricher-filter
        Record         cluster_name "${CLUSTER_NAME}"
        Allowlist_key  container_name
        Allowlist_key  namespace_name
        Allowlist_key  pod_name
        Allowlist_key  stream
        Allowlist_key  message
        Allowlist_key  log
    
    [OUTPUT]
        Name           newrelic
        Match          *
        Alias          newrelic-logs-forwarder
        licenseKey     ${LICENSE_KEY}
        endpoint       ${ENDPOINT}
        lowDataMode    ${LOW_DATA_MODE}
        sendMetrics    ${SEND_OUTPUT_PLUGIN_METRICS}
        Retry_Limit    ${RETRY_LIMIT}
    
  parsers.conf: |
---
# Source: nri-bundle/charts/newrelic-logging/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: newrelic
  labels:     
    app: newrelic-logging
    chart: newrelic-logging-1.23.5
    release: nri-bundle
    app.kubernetes.io/name: newrelic-logging
  name: nri-bundle-newrelic-logging
  annotations:
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: newrelic-logging
      release: nri-bundle
  template:
    metadata:
      annotations:
        checksum/fluent-bit-config: 1c46767a03335d01f67b3e745680db6105ef5951a56d58ca86c9f1268c315ee6
      labels:
        app: newrelic-logging
        release: nri-bundle
        kubernetes.io/os: linux
        app.kubernetes.io/name: newrelic-logging
    spec:
      serviceAccountName: nri-bundle-newrelic-logging
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 10
      initContainers:
      containers:
        - name: newrelic-logging
          image: "newrelic/newrelic-fluentbit-output:2.1.0"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: ENDPOINT
              value: "https://log-api.newrelic.com/log/v1"
            - name: SOURCE
              value:  "k8s"
            - name: LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: nri-bundle-newrelic-logging-config
                  key: license
            - name: CLUSTER_NAME
              value: [cluster-name]
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_PARSER
              value: "cri,docker"
            # NODE_NAME needs to be defined before FB_DB, because FB_DB references NODE_NAME in its value when using persistentVolume
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: FB_DB
              value: "/var/log/flb_kube.db"
            - name: PATH
              value: "/var/log/containers/*.log"
            - name: K8S_BUFFER_SIZE
              value: "32k"
            - name: K8S_LOGGING_EXCLUDE
              value: "false"
            - name: LOW_DATA_MODE
              value: "true"
            - name: RETRY_LIMIT
              value: "5"
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SEND_OUTPUT_PLUGIN_METRICS
              value: "false"
            - name: METRICS_HOST
              value: "metric-api.newrelic.com"
            
          command:
            - /fluent-bit/bin/fluent-bit
            - -c
            - /fluent-bit/etc/fluent-bit.conf
            - -e
            - /fluent-bit/bin/out_newrelic.so
          volumeMounts:
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
            - name: logs
              # We mount /var by default because container logs could be on /var/log or /var/lib/docker/containers (symlinked to /var/log)
              mountPath: /var
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 64Mi
      volumes:
        - name: fluent-bit-config
          configMap:
            name: nri-bundle-newrelic-logging-fluent-bit-config
        - name: logs
          hostPath:
            path: /var
      nodeSelector:
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
---
# Source: nri-bundle/charts/newrelic-logging/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: newrelic
  labels:     
    app: newrelic-logging
    chart: newrelic-logging-1.23.5
    release: nri-bundle
    app.kubernetes.io/name: newrelic-logging
  name: nri-bundle-newrelic-logging-config
type: Opaque
data:
  license: ZjA2ZTc1OWYzNGQwMDhiMTc3NGIyNDJiMTA3OGJjNDFGRkZGTlJBTA==
---
# Source: nri-bundle/charts/newrelic-logging/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: newrelic-logging
    chart: newrelic-logging-1.23.5
    release: "nri-bundle"
  name: nri-bundle-newrelic-logging
  namespace: newrelic
---
# Source: nri-bundle/charts/newrelic-prometheus-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nri-bundle-newrelic-prometheus-agent
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-prometheus-agent
    app.kubernetes.io/version: v2.37.8
    helm.sh/chart: newrelic-prometheus-agent-1.15.3
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - services
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: nri-bundle/charts/newrelic-prometheus-agent/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nri-bundle-newrelic-prometheus-agent
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-prometheus-agent
    app.kubernetes.io/version: v2.37.8
    helm.sh/chart: newrelic-prometheus-agent-1.15.3
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-newrelic-prometheus-agent
subjects:
- kind: ServiceAccount
  name: nri-bundle-newrelic-prometheus-agent
  namespace: newrelic
---
# Source: nri-bundle/charts/newrelic-prometheus-agent/templates/configmap.yaml
kind: ConfigMap
metadata:
  name: nri-bundle-newrelic-prometheus-agent
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-prometheus-agent
    app.kubernetes.io/version: v2.37.8
    helm.sh/chart: newrelic-prometheus-agent-1.15.3
apiVersion: v1
data:
  config.yaml: |-
    # Configuration for newrelic-prometheus-configurator
    newrelic_remote_write:
      extra_write_relabel_configs:
      - action: drop
        regex: kube_.+|container_.+|machine_.+|cadvisor_.+
        source_labels:
        - __name__
      - action: replace
        regex: timeseries_write_(.*)
        replacement: counter
        separator: ;
        source_labels:
        - __name__
        target_label: newrelic_metric_type
      - action: replace
        regex: sql_byte(.*)
        replacement: counter
        separator: ;
        source_labels:
        - __name__
        target_label: newrelic_metric_type
    static_targets:
      jobs:
      - extra_metric_relabel_config:
        - action: keep
          regex: prometheus_agent_active_series|prometheus_target_interval_length_seconds|prometheus_target_scrape_pool_targets|prometheus_remote_storage_samples_pending|prometheus_remote_storage_samples_in_total|prometheus_remote_storage_samples_retried_total|prometheus_agent_corruptions_total|prometheus_remote_storage_shards|prometheus_sd_kubernetes_events_total|prometheus_agent_checkpoint_creations_failed_total|prometheus_agent_checkpoint_deletions_failed_total|prometheus_remote_storage_samples_dropped_total|prometheus_remote_storage_samples_failed_total|prometheus_sd_kubernetes_http_request_total|prometheus_agent_truncate_duration_seconds_sum|prometheus_build_info|process_resident_memory_bytes|process_virtual_memory_bytes|process_cpu_seconds_total|prometheus_remote_storage_bytes_total
          source_labels:
          - __name__
        job_name: self-metrics
        skip_sharding: true
        targets:
        - localhost:9090
    common:
      external_labels:
        cluster_name: [cluster_name]
      scrape_interval: 30s
    kubernetes:
      jobs:
      - job_name_prefix: default
        target_discovery:
          endpoints: true
          filter:
            annotations:
              prometheus.io/scrape: true
          pod: true
      - integrations_filter:
          enabled: false
        job_name_prefix: newrelic
        target_discovery:
          endpoints: true
          filter:
            annotations:
              newrelic.io/scrape: true
          pod: true
      integrations_filter:
        app_values:
        - redis
        - traefik
        - calico
        - nginx
        - coredns
        - kube-dns
        - etcd
        - cockroachdb
        - velero
        - harbor
        - argocd
        enabled: false
        source_labels:
        - app.kubernetes.io/name
        - app.newrelic.io/name
        - k8s-app
---
# Source: nri-bundle/charts/newrelic-prometheus-agent/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: nri-bundle-newrelic-prometheus-agent-license
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-prometheus-agent
    app.kubernetes.io/version: v2.37.8
    helm.sh/chart: newrelic-prometheus-agent-1.15.3
data:
  licenseKey: ZjA2ZTc1OWYzNGQwMDhiMTc3NGIyNDJiMTA3OGJjNDFGRkZGTlJBTA==
---
# Source: nri-bundle/charts/newrelic-prometheus-agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-prometheus-agent
    app.kubernetes.io/version: v2.37.8
    helm.sh/chart: newrelic-prometheus-agent-1.15.3
  name: nri-bundle-newrelic-prometheus-agent
  namespace: newrelic
---
# Source: nri-bundle/charts/newrelic-prometheus-agent/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: newrelic-prometheus-agent
    app.kubernetes.io/version: v2.37.8
    helm.sh/chart: newrelic-prometheus-agent-1.15.3
  name: nri-bundle-newrelic-prometheus-agent
  namespace: newrelic
spec:
  serviceName: nri-bundle-newrelic-prometheus-agent-headless
  selector:
    matchLabels:
      app.kubernetes.io/instance: nri-bundle
      app.kubernetes.io/name: newrelic-prometheus-agent
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: 30a6936aec67af7befc6946fd82b24cbb280d88f7ea6ddc17dd0e5f5236b0657
      labels:
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: newrelic-prometheus-agent
    spec:

      hostNetwork: false

      serviceAccountName: nri-bundle-newrelic-prometheus-agent

      initContainers:
        - name: configurator
          image: "newrelic/newrelic-prometheus-configurator:1.18.3"
          imagePullPolicy: IfNotPresent
          args:
            - --input=/etc/configurator/config.yaml
            - --output=/etc/prometheus/config/config.yaml
          volumeMounts:
            - name: configurator-config
              mountPath: /etc/configurator/
            - name: prometheus-config
              mountPath: /etc/prometheus/config
          env:
            - name: NR_PROM_DATA_SOURCE_NAME
              valueFrom: 
                fieldRef: 
                  fieldPath: metadata.name
            - name: NR_PROM_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: nri-bundle-newrelic-prometheus-agent-license
                  key: licenseKey
            - name: NR_PROM_CHART_VERSION
              value: 1.15.3

      containers:
        - name: prometheus
          image: "quay.io/prometheus/prometheus:v2.37.8"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
            successThreshold: 1
          args:
            - --config.file=/etc/prometheus/config/config.yaml
            - --enable-feature=agent,expand-external-labels
            - --storage.agent.retention.max-time=30m
            - --storage.agent.wal-truncate-frequency=30m
            - --storage.agent.path=/etc/prometheus/storage
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/config
            - name: prometheus-storage
              mountPath: /etc/prometheus/storage

      volumes:
        - name: configurator-config
          configMap:
            name: nri-bundle-newrelic-prometheus-agent
        - name: prometheus-config
          emptyDir: {}
        - name: prometheus-storage
          emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/nri-kube-events/templates/agent-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 2.11.2
    helm.sh/chart: nri-kube-events-3.11.2
  name: nri-bundle-nri-kube-events-agent-config
  namespace: newrelic
data:
  newrelic-infra.yml: |
    is_forward_only: true
    http_server_enabled: true
    http_server_port: 8001
---
# Source: nri-bundle/charts/nri-kube-events/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 2.11.2
    helm.sh/chart: nri-kube-events-3.11.2
  name: nri-bundle-nri-kube-events
rules:
- apiGroups:
  - ""
  resources:
  - events
  - namespaces
  - nodes
  - jobs
  - persistentvolumes
  - persistentvolumeclaims
  - pods
  - services
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - watch
  - list
---
# Source: nri-bundle/charts/nri-kube-events/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 2.11.2
    helm.sh/chart: nri-kube-events-3.11.2
  name: nri-bundle-nri-kube-events
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-nri-kube-events
subjects:
- kind: ServiceAccount
  name: nri-bundle-nri-kube-events
  namespace: newrelic
---
# Source: nri-bundle/charts/nri-kube-events/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 2.11.2
    helm.sh/chart: nri-kube-events-3.11.2
  name: nri-bundle-nri-kube-events-config
  namespace: newrelic
data:
  config.yaml: |-
    sinks:
      - name: newRelicInfra
        config:
          agentEndpoint: http://localhost:8001/v1/data
          clusterName: [cluster_name]
          agentHTTPTimeout: 30s
    captureDescribe: true
    describeRefresh: 24h
    captureEvents: true
---
# Source: nri-bundle/charts/nri-kube-events/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-bundle-nri-kube-events
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 2.11.2
    helm.sh/chart: nri-kube-events-3.11.2
  annotations:
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-kube-events
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: nri-kube-events
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: kube-events
          image: newrelic/nri-kube-events:2.11.2
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          args: ["-config", "/app/config/config.yaml", "-loglevel", "debug"]
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
        - name: forwarder
          image: newrelic/k8s-events-forwarder:1.58.0
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          ports:
            - containerPort: 8001
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: nri-bundle-nri-kube-events-license
                  key: licenseKey

            - name: NRIA_OVERRIDE_HOSTNAME_SHORT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName

          volumeMounts:
            - mountPath: /var/db/newrelic-infra/data
              name: tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: tmpfs-user-data
            - mountPath: /tmp
              name: tmpfs-tmp
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
      serviceAccountName: nri-bundle-nri-kube-events
      volumes:
        - name: config
          configMap:
            name: nri-bundle-nri-kube-events-agent-config
            items:
            - key: newrelic-infra.yml
              path: newrelic-infra.yml
        - name: config-volume
          configMap:
            name: nri-bundle-nri-kube-events-config
        - name: tmpfs-data
          emptyDir: {}
        - name: tmpfs-user-data
          emptyDir: {}
        - name: tmpfs-tmp
          emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
        
        
      hostNetwork: false
---
# Source: nri-bundle/charts/nri-kube-events/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: nri-bundle-nri-kube-events-license
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 2.11.2
    helm.sh/chart: nri-kube-events-3.11.2
data:
  licenseKey: ZjA2ZTc1OWYzNGQwMDhiMTc3NGIyNDJiMTA3OGJjNDFGRkZGTlJBTA==
---
# Source: nri-bundle/charts/nri-kube-events/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 2.11.2
    helm.sh/chart: nri-kube-events-3.11.2
  name: nri-bundle-nri-kube-events
  namespace: newrelic
  annotations:
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nri-bundle-nri-metadata-injection-admission
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.30.2
    helm.sh/chart: nri-metadata-injection-4.22.2
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - get
      - update
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nri-bundle-nri-metadata-injection-admission
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.30.2
    helm.sh/chart: nri-metadata-injection-4.22.2
    app: nri-metadata-injection-admission
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-nri-metadata-injection-admission
subjects:
  - kind: ServiceAccount
    name: nri-bundle-nri-metadata-injection-admission
    namespace: newrelic
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/job-createSecret.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: nri-bundle-nri-metadata-injection-admission-create
  namespace: newrelic
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission-create
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.30.2
    helm.sh/chart: nri-metadata-injection-4.22.2
spec:
  template:
    metadata:
      name: nri-bundle-nri-metadata-injection-admission-create
      labels:
        app: nri-metadata-injection-admission-create
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: nri-metadata-injection
        app.kubernetes.io/version: 1.30.2
        helm.sh/chart: nri-metadata-injection-4.22.2
    spec:
      containers:
        - name: create
          image: "registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.3"
          imagePullPolicy: IfNotPresent
          args:
            - create
            - --host=nri-bundle-nri-metadata-injection,nri-bundle-nri-metadata-injection.newrelic.svc
            - --namespace=newrelic
            - --secret-name=nri-bundle-nri-metadata-injection-admission
            - --cert-name=tls.crt
            - --key-name=tls.key
      restartPolicy: OnFailure
      serviceAccountName: nri-bundle-nri-metadata-injection-admission
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/job-patchWebhook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: nri-bundle-nri-metadata-injection-admission-patch
  namespace: newrelic
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission-patch
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.30.2
    helm.sh/chart: nri-metadata-injection-4.22.2
spec:
  template:
    metadata:
      name: nri-bundle-nri-metadata-injection-admission-patch
      labels:
        app: nri-metadata-injection-admission-patch
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: nri-metadata-injection
        app.kubernetes.io/version: 1.30.2
        helm.sh/chart: nri-metadata-injection-4.22.2
    spec:
      containers:
        - name: patch
          image: "registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.3"
          imagePullPolicy: IfNotPresent
          args:
            - patch
            - --webhook-name=nri-bundle-nri-metadata-injection
            - --namespace=newrelic
            - --secret-name=nri-bundle-nri-metadata-injection-admission
            - --patch-failure-policy=Ignore
            - --patch-validating=false
      restartPolicy: OnFailure
      serviceAccountName: nri-bundle-nri-metadata-injection-admission
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nri-bundle-nri-metadata-injection-admission
  namespace: newrelic
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.30.2
    helm.sh/chart: nri-metadata-injection-4.22.2
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nri-bundle-nri-metadata-injection-admission
  namespace: newrelic
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.30.2
    helm.sh/chart: nri-metadata-injection-4.22.2
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nri-bundle-nri-metadata-injection-admission
subjects:
  - kind: ServiceAccount
    name: nri-bundle-nri-metadata-injection-admission
    namespace: newrelic
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nri-bundle-nri-metadata-injection-admission
  namespace: newrelic
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.30.2
    helm.sh/chart: nri-metadata-injection-4.22.2
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/mutatingWebhookConfiguration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: nri-bundle-nri-metadata-injection
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.30.2
    helm.sh/chart: nri-metadata-injection-4.22.2
webhooks:
- name: metadata-injection.newrelic.com
  clientConfig:
    service:
      name: nri-bundle-nri-metadata-injection
      namespace: newrelic
      path: "/mutate"
    caBundle: ""
  rules:
  - operations: ["CREATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  failurePolicy: Ignore
  timeoutSeconds: 28
  sideEffects: None
  admissionReviewVersions: ["v1", "v1beta1"]
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-bundle-nri-metadata-injection
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.30.2
    helm.sh/chart: nri-metadata-injection-4.22.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-metadata-injection
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: nri-metadata-injection
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        runAsGroup: 1001
      hostNetwork: false
      containers:
      - name: nri-metadata-injection
        image: "newrelic/k8s-metadata-injection:1.30.2"
        imagePullPolicy: IfNotPresent
        env:
        - name: clusterName
          value: sl-space-tke
        ports:
          - containerPort: 8443
            protocol: TCP
        volumeMounts:
        - name: tls-key-cert-pair
          mountPath: /etc/tls-key-cert-pair
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 1
        resources:
          
          limits:
            memory: 80M
          requests:
            cpu: 100m
            memory: 30M
      volumes:
      - name: tls-key-cert-pair
        secret:
          secretName: nri-bundle-nri-metadata-injection-admission
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nri-bundle-nri-metadata-injection
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.30.2
    helm.sh/chart: nri-metadata-injection-4.22.2
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
